<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- Member 테이블에 대한 CRUD 기능을 구현하기 위한 Mapper -->
<mapper namespace="BookMapper">
	
	<!-- Beans 클래스의 객체이름(id)과 클래스 이름(type)를 명시한다. -->
	<resultMap type="study.jsp.bookstory.model.Book" id="book">
	<!-- 빈즈의 멤버 변수(property) 이름과 대상테이블의 컬럼(column)을 연결한다-->
		<result property="id" column="id"/>
		<result property="book_name" column="book_name"/>
		<result property="book_author" column="book_author"/>
		<result property="daily_date" column="daily_date"/>
		<result property="total_hit" column="total_hit"/>
		<result property="intro" column="intro"/>
		<result property="genre" column="genre"/>
		<result property="reg_date" column="reg_date"/>
		<result property="edit_date" column="edit_date"/>
		<result property="total_point" column="total_point"/>
		<result property="rent_point" column="rent_point"/>
		<result property="book_end" column="book_end"/>
		<result property="total_favorite" column="total_favorite"/>
		<result property="imagePath" column="imagePath"/>
	</resultMap>



	<!-- 작품 등록 -->
	<insert id="insertBook" parameterType="study.jsp.bookstory.model.Book" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO book(book_name, book_author,total_hit,intro,genre,
										reg_date,edit_date,total_point,rent_point,book_end,total_favorite,daily_date)
	VALUES(#{book_name}, #{book_author},0, #{intro}, #{genre},
					now(),now(),0,0,"N",0,#{daily_date})
	</insert>
	
	<!-- 같은 이름의 작품이 있는지 검사 
			파라미터와 DB의 book_name 칼럼의 공백 제거 -->
	<select id="countEqualBookName" parameterType="study.jsp.bookstory.model.Book" resultType="int">
		select count(book_name) from book where replace(book_name,' ','')= #{book_name} 
	</select>
	
	
	<!-- 작품 검색(관리자 에피소드 업로드용) -->
	<select id="searchBookItemList" parameterType="study.jsp.bookstory.model.Book" resultMap="book">
		SELECT id, book_name, book_author, daily_date, genre,
		(SELECT concat(file_dir, '/', file_name) FROM imagefile WHERE book_id=book.id AND content_type LIKE ('image/%') AND image_type='main'
			ORDER BY id ASC LIMIT 0, 1) as imagePath
		FROM book
		WHERE replace(book_name,' ','') like concat('%', #{book_name}, '%')
		OR replace(book_author,' ','') like concat('%', #{book_name}, '%')
	</select>
	
	
	

</mapper>