<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- Member 테이블에 대한 CRUD 기능을 구현하기 위한 Mapper -->
<mapper namespace="BookMarkMapper">
	
	<!-- Beans 클래스의 객체이름(id)과 클래스 이름(type)를 명시한다. -->
	<resultMap id="bookmark" type="study.jsp.bookstory.model.BookMark" >
	<!-- 빈즈의 멤버 변수(property) 이름과 대상테이블의 컬럼(column)을 연결한다-->
		<result property="id" column="id"/>
		<result property="member_id" column="member_id"/>
		<result property="episode_id" column="episode_id"/>
		<result property="imagePath" column="image_path"/>
	
	</resultMap>

	<insert id="insertAddBookMark" parameterType="study.jsp.bookstory.model.BookMark" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO bookmark (
	   member_id, episode_id
	) VALUES (
	   #{member_id}, #{episode_id} 
	   )
	</insert> 
	
	<delete id="deleteRemoveBookMark" parameterType="study.jsp.bookstory.model.BookMark">
         DELETE FROM bookmark WHERE id=#{id};
	</delete>
	
	
	<!-- 북마크 목록을 조회한다. -->
	<select id="selectBookMarkList" parameterType="study.jsp.bookstory.model.BookMark" resultMap="bookmark">
	SELECT e.episode_order, e.episode_name, (SELECT concat(file_dir, '/', file_name) 
    FROM imagefile WHERE episode_id=(SELECT b.episode_id FROM bookmark b WHERE member_id =#{member_id}) AND content_type LIKE ('image/%') AND image_type='episode'
			ORDER BY id ASC LIMIT 0, 1) AS imagePath FROM episode e
       WHERE id = (select b.episode_id from bookmark b where member_id =#{member_id} )
       
       ORDER BY id DESC
       LIMIT #{limitStart}, #{listCount}       
	</select>
	
	<!-- 전체 게시물 수를 조회한다. 페이지 구현 위해서 -->
	<select id="selectBookMarkCount" parameterType="study.jsp.bookstory.model.BookMark" resultType="int">
	SELECT COUNT(id) FROM bookmark 
	
	
	</select>
	

	
</mapper>