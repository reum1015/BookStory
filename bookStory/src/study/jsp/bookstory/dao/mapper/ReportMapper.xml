<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="ReportMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="report" type="study.jsp.bookstory.model.Report">
		<result property="id" column="id"/>											<!-- 신고 번호 -->
		<result property="reg_date" column="reg_date"/>							<!-- 신고받은 날짜 -->
		<result property="blind" column="blind"/>									<!-- 블라인드 처리 N:아무처리 않함 Y:블라인드 처리 -->
		<result property="member_id" column="member_id"/>					<!-- 신고자 -->
		<result property="target_member_id" column="target_member_id"/>	<!-- 신고 당한 회원 id -->
		<result property="report_subject" column="report_subject" />			<!-- 게시글 제목 -->
		<result property="report_content" column="report_content"/>			<!-- 신고내용 -->
		<result property="article_id" column="article_id"/>							<!-- 게시글 번호 (외래키) -->
		<result property="comment_id" column="comment_id"/>					<!-- 덧글 번호 (외래키) -->
		<result property="nick_name" column="nick_name"/>
		<result property="user_nickname" column="user_nickname"/>
		<result property="comment_content" column="comment_content"/>
	</resultMap>
	
	<!-- 신고된 게시글 등록 -->
	<insert id="insertArticleReport" parameterType="study.jsp.bookstory.model.Report"
		useGeneratedKeys="true" keyProperty="id">
	INSERT INTO report ( 
		member_id, target_member_id, report_subject, report_content, article_id, reg_date,
		nick_name, user_nickname
	) 
	VALUES (
		#{member_id}, #{target_member_id}, #{report_subject}, #{report_content}, #{article_id}, now(),
		#{nick_name}, #{user_nickname}
	)
	</insert>
	
	<!-- 신고된 게시글의  reported 데이터 변경 -->
	<update id="updateReportedDate" parameterType="study.jsp.bookstory.model.Article">
	UPDATE article SET reported = "Y"
	WHERE reported = "N" and member_id = #{member_id} and id = #{id}
	</update>
	
	<!-- 신고된 게시판인지에 대한 판별 -->
	<select id="selectReportArticle" parameterType="study.jsp.bookstory.model.Report" resultType="int">		
	SELECT COUNT(id) FROM report WHERE article_id=#{article_id}
	</select>
	
	<!-- 전체 신고 게시글의 count를 구한다. -->
	<select id="selectReportCount" parameterType="study.jsp.bookstory.model.Report" resultType="int">
	SELECT COUNT(id) FROM report
	</select>
	
	<!-- 신고한 게시글을 리스트로 출력한다. -->
	<select id="selectReportArticleList" parameterType="study.jsp.bookstory.model.Report" resultMap="report">
	SELECT nick_name, user_nickname, report_content, DATE_FORMAT(reg_date, '%Y-%m-%d %H:%i:%s') AS reg_date, report_subject, article_id
	FROM report
	ORDER BY id desc
	</select>

	<!-- 관리자가 게시글 강제 삭제 하기위한 mapper -->
	<!-- (1.1) 삭제하려는 덧글의 존재 유/무를 파악하기위한 쿼리 -->
	<select id="selectCommentCount" parameterType="study.jsp.bookstory.model.Comment" resultType="int">
		SELECT count(id) FROM comment WHERE article_id=#{article_id}
	</select>
	
	<!-- (1.2) 게시글을 강제삭제 하기위한 관리자 권한으로 해당 게시글의 덧글 삭제 -->
	<delete id="deleteAdminComment" parameterType="study.jsp.bookstory.model.Comment">
		DELETE from Comment WHERE article_id=#{article_id}
	</delete>
	
	<!-- (2) 게시글을 강제삭제 하기위한 신고된 report 게시글 삭제 -->
	<delete id="deleteReportArticle" parameterType="study.jsp.bookstory.model.Report">
		DELETE from Report WHERE article_id=#{article_id}
	</delete>
	
	<!-- (3) 게시글을 강제삭제 하기위한 관리자 권한으로 강제 삭제 -->
	<delete id="deleteAdminArticle" parameterType="study.jsp.bookstory.model.Article">
		DELETE from Article WHERE id=#{id}
	</delete>
	
	<!-- (4.1) report만 삭제 버튼 표시처리 -->
	<select id="selectReportCountArticle" parameterType="study.jsp.bookstory.model.Report" resultType="int">
		SELECT count(id) FROM report WHERE article_id=#{article_id}
	</select>
	
	<!-- (4.2) report만 삭제후 신고된 테이블의 reported데이터를 'N'으로 변환 -->
	<update id="updateArticleReported" parameterType="study.jsp.bookstory.model.Article">
		UPDATE article SET reported = "N"
		WHERE reported = "Y" and id = #{id} and member_id = #{member_id}
	</update>
	
	<!-- 관리자가 게시글 강제 삭제 하기위한 mapper 끝-->
	
	<!-- 회원을 강제 탈퇴 시키기 위한 mapper 시작 -->
	
	<!-- 회원을 강제 삭제한다. -->
	<delete id="deleteMemberId" parameterType="study.jsp.bookstory.model.Member">
		DELETE FROM member WHERE id=#{id}
	</delete>
	
	<!-- 회원을 강제 탈퇴 시키기 위한 mapper 끝 -->
	
	
	
</mapper>