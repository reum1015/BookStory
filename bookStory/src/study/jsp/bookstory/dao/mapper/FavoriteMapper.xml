<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- Member 테이블에 대한 CRUD 기능을 구현하기 위한 Mapper -->
<mapper namespace="FavoriteMapper">
	
	<!-- Beans 클래스의 객체이름(id)과 클래스 이름(type)를 명시한다. -->
	<resultMap type="study.jsp.bookstory.model.Favorite" id="favorite">
	<!-- 빈즈의 멤버 변수(property) 이름과 대상테이블의 컬럼(column)을 연결한다-->
		<result property="id" column="id"/>
		<result property="member_id" column="member_id"/>
		<result property="book_id" column="book_id"/>
		<result property="gender" column="gender"/>
		<result property="birthdate" column="birthdate"/>	
		<result property="imagePath" column="image_path"/>
		<result property="book_author" column="book_author"/>
		<result property="book_name" column="book_name"/>
		<result property="episode_count" column="episode_count"/>
		<result property="reg_date" column="reg_date"/>
	</resultMap>



	<!-- 관심등록 한 작품인지 아닌지 확인 -->
	<select id="selectCountFavoriteBookById"  parameterType="study.jsp.bookstory.model.Favorite" resultType="int">
	SELECT count(id) FROM favorite WHERE member_id=#{member_id} AND book_id=#{book_id}
	</select>
	
	<!-- 관심등록 추가 -->
	<insert id="insertAddFavorite" parameterType="study.jsp.bookstory.model.Favorite" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO favorite (
	 member_id, book_id, gender, birthdate, episode_count, reg_date
	)	VALUES (
	 #{member_id}, #{book_id}, #{gender}, #{birthdate}, #{episode_count}, now()
	 )
	</insert> 
	
	
	<delete id="deleteRemoveFavorite" parameterType="study.jsp.bookstory.model.Favorite">
	 DELETE FROM favorite WHERE member_id=#{member_id} AND book_id=#{book_id}	
	</delete>
	

	<!-- 관심작품 목록을 조회한다. -->
	<select id="selectFavoriteList" parameterType="study.jsp.bookstory.model.Favorite" resultMap="favorite">
    SELECT  b.book_author, b.book_name, concat(i.file_dir, '/', i.file_name) as imagePath 
      FROM MEMBER as m LEFT JOIN Favorite as f ON m.id = f.member_id
      LEFT JOIN Book as b ON f.book_id = b.id LEFT JOIN imagefile as i 
       	ON b.id = i.book_id where i.content_type LIKE ('image/%') AND image_type="main" AND member_id=#{member_id}
        
        ORDER BY b.id DESC
       	LIMIT #{limitStart}, #{listCount}
	</select>
	
	
		<!-- 전체 관심작품 수를 조회한다. 페이지 구현 위해서 -->
	<select id="selectFavoriteCount" parameterType="study.jsp.bookstory.model.Favorite" resultType="int">
	SELECT COUNT(id) FROM favorite WHERE member_id =#{member_id}	
	</select>
	

</mapper>